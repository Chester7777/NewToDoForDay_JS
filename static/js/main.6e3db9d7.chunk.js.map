{"version":3,"sources":["Component/TodoForm.js","Component/Todo.js","Component/TodoList.js","App.js","index.js"],"names":["AddTodoForm","props","useState","input","setInput","className","type","placeholder","value","name","onChange","e","currentTarget","onClick","event","preventDefault","addTodo","id","Math","floor","random","text","Todo","edit","setEdit","todo","newText","setNewText","isComplete","target","completeTodo","removeTodo","updateTodo","TodoList","todos","setTodos","todoId","newValue","newState","map","removeArr","filter","updatedTodos","trim","length","newTodo","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAGO,SAASA,EAAYC,GAAQ,IAAD,EACLC,mBAAS,IADJ,mBACxBC,EADwB,KACjBC,EADiB,KAW/B,OACI,uBAAMC,UAAU,YAAhB,UACI,uBACIC,KAAK,OACLC,YAAY,aACZC,MAAOL,EACPM,KAAK,OACLJ,UAAU,aACVK,SAAU,SAAAC,GAAC,OAAIP,EAASO,EAAEC,cAAcJ,UAE5C,wBAAQK,QAlBA,SAACC,GACbA,EAAMC,iBACNd,EAAMe,QAAQ,CACVC,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAmBC,KAAMlB,IAEjDC,EAAS,KAaqBC,UAAU,cAApC,yB,oBCrBCiB,EAAO,SAACrB,GAAW,IAAD,EAEHC,oBAAS,GAFN,mBAEpBqB,EAFoB,KAEdC,EAFc,OAGGtB,mBAASD,EAAMwB,KAAKJ,MAHvB,mBAGpBK,EAHoB,KAGXC,EAHW,KAK3B,OACI,mCACI,sBACItB,UAAWJ,EAAMwB,KAAKG,WAAa,oBAAsB,WAD7D,UAEKL,EACG,sBAAMlB,UAAU,YAAhB,SACI,uBACIC,KAAK,OACLD,UAAU,aACVG,MAAOkB,EACPhB,SAAU,SAAAI,GAAK,OAAKa,EAAWb,EAAMe,OAAOrB,YAElD,qBAAKK,QAAS,kBAAMZ,EAAM6B,aAAa7B,EAAMwB,KAAKR,KAAlD,SACGhB,EAAMwB,KAAKJ,OAEpB,sBAAKhB,UAAU,QAAf,UACI,cAAC,IAAD,CACIQ,QAAS,kBAAMZ,EAAM8B,WAAW9B,EAAMwB,KAAKR,KAC3CZ,UAAU,gBAEd,cAAC,IAAD,CACIQ,QAAS,WACDU,GACAC,GAAQ,GACRvB,EAAM+B,WAAW/B,EAAMwB,KAAKR,GAAIS,IAEhCF,GAAQ,IAGhBnB,UAAU,uBChC3B,SAAS4B,EAAShC,GAAQ,IAAD,EAEFC,mBAAS,IAFP,mBAErBgC,EAFqB,KAEdC,EAFc,KAYtBH,EAAa,SAACI,EAAQC,GACxB,IAAMC,EAAWJ,EAAMK,KAAI,SAAAd,GAAI,OAAEA,EAAKR,KAAKmB,EAASX,EAAnB,2BAA+BA,GAA/B,IAAqCJ,KAAKgB,OAC3EF,EAASG,IAGPP,EAAa,SAAAd,GACf,IAAMuB,EAAY,YAAIN,GAAOO,QAAO,SAAAhB,GAAI,OAAIA,EAAKR,KAAOA,KACxDkB,EAASK,IAEPV,EAAe,SAACb,GAClB,IAAIyB,EAAeR,EAAMK,KAAI,SAAAd,GAIzB,OAHIA,EAAKR,KAAOA,IACZQ,EAAKG,YAAcH,EAAKG,YAErBH,KAEXU,EAASO,IAGb,OACI,gCACI,qDACA,cAAC1C,EAAD,CAAagB,QA9BL,SAACS,GACb,GAAgC,IAA5BA,EAAKJ,KAAKsB,OAAOC,OAArB,CAGA,IAAMC,EAAO,CAAIpB,GAAJ,mBAAaS,IAC1BC,EAASU,OA0BJX,EAAMK,KAAI,SAACd,GAAD,OACX,cAAC,EAAD,CAAMA,KAAMA,EAAMM,WAAYA,EAAYC,WAAYA,EAAYF,aAAcA,GAAmBL,EAAKR,UC7BrG6B,MARf,WACE,OACI,qBAAKzC,UAAU,WAAf,SACE,cAAC4B,EAAD,OCHRc,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.6e3db9d7.chunk.js","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\r\n\r\n\r\nexport function AddTodoForm(props) {\r\n    const [input, setInput] = useState('')\r\n\r\n    const addTodo = (event) => {\r\n        event.preventDefault();\r\n        props.addTodo({\r\n            id: Math.floor(Math.random() * 10000), text: input\r\n        });\r\n        setInput(\"\")\r\n    }\r\n\r\n    return (\r\n        <form className=\"t;d;-form\" >\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Add a todo\"\r\n                value={input}\r\n                name=\"text\"\r\n                className=\"todo-input\"\r\n                onChange={e => setInput(e.currentTarget.value)}\r\n            />\r\n            <button onClick={addTodo} className=\"todo-button\">Add todo</button>\r\n        </form>\r\n    )\r\n}\r\n\r\n","import React, {useState} from \"react\";\r\nimport {RiCloseCircleLine, TiEdit} from \"react-icons/all\";\r\n\r\nexport const Todo = (props) => {\r\n\r\n    const [edit, setEdit] = useState(false)\r\n    const [newText, setNewText] = useState(props.todo.text)\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className={props.todo.isComplete ? \"todo-row complete\" : \"todo-row\"}>\r\n                {edit ?\r\n                    <form className=\"t;d;-form\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"task-input\"\r\n                            value={newText}\r\n                            onChange={event => (setNewText(event.target.value))}/>\r\n                    </form>\r\n                    : <div onClick={() => props.completeTodo(props.todo.id)}>\r\n                        {props.todo.text}\r\n                    </div>}\r\n                <div className=\"icons\">\r\n                    <RiCloseCircleLine\r\n                        onClick={() => props.removeTodo(props.todo.id)}\r\n                        className=\"delete-icon\"\r\n                    />\r\n                    <TiEdit\r\n                        onClick={() => {\r\n                            if (edit) {\r\n                                setEdit(false);\r\n                                props.updateTodo(props.todo.id, newText);\r\n                            } else {\r\n                                setEdit(true);\r\n                            }\r\n                        }}\r\n                        className=\"edit-icon\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </>)\r\n}","import React, {useState} from \"react\";\r\nimport {AddTodoForm} from \"./TodoForm\";\r\nimport {Todo} from \"./Todo\";\r\n\r\n\r\nexport function TodoList(props) {\r\n\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    const addTodo = (todo) => {\r\n        if (todo.text.trim().length === 0) {\r\n            return;\r\n        }\r\n        const newTodo = [todo, ...todos];\r\n        setTodos(newTodo)\r\n    };\r\n\r\n    const updateTodo = (todoId, newValue) => {\r\n        const newState = todos.map(todo=>todo.id!==todoId ? todo : ({...todo, text:newValue}));\r\n        setTodos(newState);\r\n    }\r\n\r\n    const removeTodo = id => {\r\n        const removeArr = [...todos].filter(todo => todo.id !== id)\r\n        setTodos(removeArr);\r\n    }\r\n    const completeTodo = (id) => {\r\n        let updatedTodos = todos.map(todo => {\r\n            if (todo.id === id) {\r\n                todo.isComplete = !todo.isComplete;\r\n            }\r\n            return todo;\r\n        });\r\n        setTodos(updatedTodos);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>What i doing today!</h1>\r\n            <AddTodoForm addTodo={addTodo}/>\r\n            {todos.map((todo) => (\r\n            <Todo todo={todo} removeTodo={removeTodo} updateTodo={updateTodo} completeTodo={completeTodo} key={todo.id}/>\r\n            ))}\r\n        </div>\r\n    )\r\n}","import React from \"react\";\nimport \"./App.css\";\nimport {TodoList} from \"./Component/TodoList\";\n\nfunction App() {\n  return (\n      <div className=\"todo-app\">\n        <TodoList />\n      </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}